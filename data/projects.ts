export const projects = [
  {
    id: "gangwon-travel",
    title: "모두의 취향을 고려한 강원도 여행 코스 추천 서비스",
    description: "개인과 그룹의 여행 성향을 분석하여 최적화된 강원도 여행 코스를 추천하는 서비스입니다.",
    image: "/placeholder.svg?height=300&width=500",
    overview:
      "이 프로젝트는 개인 및 그룹의 여행 성향을 분석하여 맞춤형 강원도 여행 코스를 추천하는 서비스입니다. 사용자의 취향과 선호도를 고려하여 최적의 여행 경로와 장소를 제안합니다.",
    challenge:
      "다양한 사용자의 취향을 고려하면서도 그룹 내 모든 구성원이 만족할 수 있는 여행 코스를 추천하는 알고리즘을 개발하는 것이 주요 도전 과제였습니다. 또한 최적의 이동 경로를 계산하여 효율적인 여행 일정을 제안해야 했습니다.",
    solution:
      "K-평균 클러스터링과 코사인 유사도를 활용하여 사용자의 여행 성향을 분석하고, 그룹 구성원들의 선호도를 종합적으로 고려한 추천 시스템을 개발했습니다. 또한 이동 경로 최적화 알고리즘을 적용하여 지역별 최적 동선을 계산했습니다.",
    result:
      "장려상 수상, 개인 성향 분석 만족도 87% 확인, 그룹 여행 계획 시 사용자 만족도 30% 증가 등의 성과를 거두었습니다.",
    github: "https://github.com/example/gangwon-travel",
    demo: "https://gangwon-travel.example.com",
    frontend: {
      description:
        "사용자 친화적인 인터페이스를 통해 여행 성향 분석과 코스 추천 결과를 직관적으로 보여주는 프론트엔드를 개발했습니다.",
      responsibilities: [
        "반응형 웹 인터페이스 설계 및 구현",
        "여행 성향 분석을 위한 인터랙티브 설문 폼 개발",
        "지도 API를 활용한 여행 코스 시각화",
        "사용자 인증 및 프로필 관리 기능 구현",
      ],
      tech: ["React", "Redux", "Styled Components", "Kakao Maps API", "Framer Motion"],
      features: [
        "인터랙티브 여행 성향 분석 설문",
        "개인 및 그룹별 맞춤형 여행 코스 추천",
        "지도 기반 여행 코스 시각화",
        "여행 일정 저장 및 공유 기능",
      ],
      images: ["/placeholder.svg?height=300&width=500", "/placeholder.svg?height=300&width=500"],
    },
    backend: {
      description:
        "안정적이고 확장 가능한 백엔드 시스템을 구축하여 사용자 데이터 관리와 추천 알고리즘을 효율적으로 처리했습니다.",
      responsibilities: [
        "RESTful API 설계 및 구현",
        "데이터베이스 스키마 설계",
        "사용자 인증 및 권한 관리 시스템 개발",
        "여행 코스 추천 API 개발",
      ],
      tech: ["Django REST Framework", "MySQL", "Redis", "Docker", "AWS"],
      features: [
        "사용자 인증 및 권한 관리",
        "여행 성향 데이터 저장 및 관리",
        "여행 코스 추천 API",
        "외부 API 연동 (관광 정보, 날씨 정보 등)",
      ],
      architecture:
        "마이크로서비스 아키텍처를 채택하여 사용자 관리, 추천 시스템, 외부 API 연동 등의 기능을 독립적인 서비스로 분리했습니다. 이를 통해 시스템의 확장성과 유지보수성을 향상시켰습니다.",
    },
    ai: {
      description: "사용자의 여행 성향을 분석하고 최적의 여행 코스를 추천하는 AI 모델을 개발했습니다.",
      responsibilities: [
        "여행 성향 분석을 위한 클러스터링 모델 개발",
        "그룹 추천 알고리즘 설계 및 구현",
        "이동 경로 최적화 알고리즘 개발",
        "추천 시스템 성능 평가 및 개선",
      ],
      tech: ["Python", "Scikit-learn", "Pandas", "NumPy", "TensorFlow"],
      models: [
        "K-평균 클러스터링: 사용자의 여행 성향을 유사한 그룹으로 분류",
        "코사인 유사도: 사용자 간 취향 유사도 계산",
        "경로 최적화 알고리즘: 여행 장소 간 최적 이동 경로 계산",
      ],
      dataProcessing:
        "사용자의 여행 성향 데이터를 수집하고 전처리하여 분석에 적합한 형태로 변환했습니다. 결측치 처리, 이상치 제거, 특성 스케일링 등의 작업을 수행했습니다.",
      evaluation:
        "추천 시스템의 성능을 평가하기 위해 사용자 만족도 조사와 A/B 테스트를 실시했습니다. 그 결과 개인 성향 분석 만족도 87%, 그룹 여행 계획 시 사용자 만족도 30% 증가 등의 성과를 확인했습니다.",
    },
  },
  {
    id: "sign-language",
    title: "웹서핑이 힘든 청각장애인들을 위한 한국어-수어 통역 서비스",
    description:
      "청각장애인의 웹 서비스 접근성을 개선하기 위해 실시간 한국어-수어 번역과 자연스러운 수어 영상을 제공하는 서비스입니다.",
    image: "/placeholder.svg?height=300&width=500",
    overview:
      "이 프로젝트는 청각장애인들이 웹 서비스를 보다 쉽게 이용할 수 있도록 한국어 텍스트를 수어로 번역하여 제공하는 서비스입니다. 실시간 번역과 자연스러운 수어 영상을 통해 정보 접근성을 향상시키는 것이 목표입니다.",
    challenge:
      "한국어와 수어는 문법 구조가 다르기 때문에 단순 단어 대 단어 번역으로는 자연스러운 수어 표현이 어렵습니다. 또한 수어 사전에 없는 단어를 처리하고, 실시간으로 자연스러운 수어 영상을 생성하는 것이 주요 도전 과제였습니다.",
    solution:
      "GPT와 형태소 분석기를 결합하여 한국어-수어 번역 알고리즘을 개발하고, 수어 사전에 없는 단어의 뜻을 해석하여 수어 영상을 제작했습니다. 또한 벡터 데이터베이스를 활용하여 빠른 응답 시간을 구현했습니다.",
    result:
      "번역 정확도 개선으로 사용자 피드백에서 85% 긍�� 반응을 얻었으며, 단어 응답 시간 0.1초 이내, 지원 단어 수 약 19,000개(금융 특화 단어 500개 포함) 등의 성과를 달성했습니다.",
    github: "https://github.com/example/sign-language",
    demo: "https://sign-language.example.com",
    frontend: {
      description:
        "청각장애인 사용자를 위한 직관적이고 접근성 높은 인터페이스를 개발했습니다. 수어 영상을 자연스럽게 재생하고 사용자가 쉽게 조작할 수 있는 UI를 구현했습니다.",
      responsibilities: [
        "접근성을 고려한 UI/UX 설계",
        "수어 영상 재생 플레이어 개발",
        "실시간 번역 요청 및 결과 표시 기능 구현",
        "반응형 웹 디자인 적용",
      ],
      tech: ["Next.js", "Framer Motion", "WebRTC", "TailwindCSS", "Zustand"],
      features: [
        "실시간 한국어-수어 번역 요청",
        "자연스러운 수어 영상 재생",
        "번역 기록 저장 및 관리",
        "사용자 맞춤 설정 (재생 속도, 영상 크기 등)",
      ],
      images: ["/placeholder.svg?height=300&width=500", "/placeholder.svg?height=300&width=500"],
    },
    backend: {
      description: "실시간 번역 요청을 처리하고 수어 영상을 효율적으로 제공하는 백엔드 시스템을 구축했습니다.",
      responsibilities: [
        "실시간 번역 API 개발",
        "수어 영상 데이터베이스 관리",
        "캐싱 시스템 구현으로 응답 시간 최적화",
        "사용자 데이터 및 번역 기록 관리",
      ],
      tech: ["FastAPI", "Redis", "PostgreSQL", "Docker", "AWS Lambda"],
      features: [
        "실시간 한국어-수어 번역 API",
        "수어 영상 스트리밍 서비스",
        "사용자 인증 및 데이터 관리",
        "번역 기록 분석 및 통계",
      ],
      architecture:
        "서버리스 아키텍처와 마이크로서비스를 결합하여 확장성과 비용 효율성을 높였습니다. 번역 요청은 AWS Lambda를 통해 처리하고, 수어 영상은 CDN을 통해 제공하여 빠른 응답 시간을 구현했습니다.",
    },
    ai: {
      description:
        "한국어 텍스트를 자연스러운 수어로 번역하는 AI 모델을 개발했습니다. 문법 구조의 차이를 고려한 번역 알고리즘과 수어 사전에 없는 단어 처리 방법을 구현했습니다.",
      responsibilities: [
        "한국어-수어 번역 알고리즘 개발",
        "형태소 분석 및 문장 구조 변환 모델 구현",
        "벡터 데이터베이스를 활용한 빠른 검색 시스템 구축",
        "번역 품질 평가 및 개선",
      ],
      tech: ["GPT", "형태소 분석기", "벡터 데이터베이스", "PyTorch", "Hugging Face Transformers"],
      models: [
        "GPT 기반 문장 구조 변환 모델: 한국어 문장을 수어 문법 구조로 변환",
        "형태소 분석기: 한국어 문장의 형태소 분석 및 품사 태깅",
        "벡터 임베딩 모델: 단어와 문장의 의미를 벡터 공간에 매핑",
      ],
      dataProcessing:
        "한국어-수어 병렬 코퍼스를 구축하고 전처리하여 번역 모델 학습에 활용했습니다. 또한 수어 사전에 없는 단어를 처리하기 위한 데이터 증강 기법을 적용했습니다.",
      evaluation:
        '청각장애인 사용자  "한국어-수어 병렬 코퍼스를 구축하고 전처리하여 번역 모델 학습에 활용했습니다. 또한 수어 사전에 없는 단어를 처리하기 위한 데이터 증강 기법을 적용했습니다.',
      evaluation:
        "청각장애인 사용자 그룹을 대상으로 번역 품질 평가를 실시한 결과, 85%의 사용자가 번역 결과에 만족한다고 응답했습니다. 특히 문법 구조 변환의 자연스러움과 전문 용어 처리 능력에서 높은 평가를 받았습니다.",
    },
  },
  {
    id: "zoozoofin",
    title: "주주핀 ZooZooFin - 핀테크 게임 앱 서비스",
    description:
      "금융 지식이 부족한 사용자가 육성형 게임을 통해 자산 관리와 투자 전략을 재미있고 효과적으로 배울 수 있는 핀테크 게임 앱 서비스입니다.",
    image: "/placeholder.svg?height=300&width=500",
    overview:
      "주주핀은 금융 교육과 게임을 결합한 핀테크 앱으로, 사용자가 가상의 캐릭터를 육성하면서 실제 금융 지식과 투자 전략을 배울 수 있도록 설계되었습니다. 재미있는 게임 요소와 실용적인 금융 교육을 결합하여 금융 문맹률을 낮추는 것이 목표입니다.",
    challenge:
      "금융 지식이 부족한 사용자들에게 복잡한 금융 개념을 쉽고 재미있게 전달하는 것이 주요 도전 과제였습니다. 또한 게임적 요소와 교육적 가치를 균형 있게 결합하여 사용자의 지속적인 참여를 유도해야 했습니다.",
    solution:
      "LSTM 모델을 활용하여 주가 패턴 힌트를 생성하고, 재무제표 및 감정 분석 결과를 연계하여 힌트를 제공했습니다. 또한 게임 내 퀘스트와 보상 시스템을 통해 사용자의 학습 동기를 유지하도록 설계했습니다.",
    result:
      "금융 퀴즈와 용어 설명을 통해 사용자 피드백 긍정률이 향상되었으며, 사용자들이 재무제표, 뉴스 분석 결과를 통해 주식 시장을 학습하며 재미를 느꼈다고 평가했습니다.",
    github: "https://github.com/example/zoozoofin",
    demo: "https://zoozoofin.example.com",
    frontend: {
      description:
        "사용자 친화적인 모바일 앱 인터페이스를 개발하여 게임과 금융 교육을 자연스럽게 결합했습니다. 직관적인 UI와 인터랙티브한 요소를 통해 사용자 경험을 향상시켰습니다.",
      responsibilities: [
        "React Native를 활용한 크로스 플랫폼 모바일 앱 개발",
        "게임 캐릭터 육성 및 상호작용 UI 구현",
        "금융 데이터 시각화 및 차트 개발",
        "사용자 프로그레스 및 성취 시스템 구현",
      ],
      tech: ["React Native", "Redux", "D3.js", "Lottie", "Styled Components"],
      features: [
        "캐릭터 육성 및 커스터마이징",
        "실시간 주식 시장 시뮬레이션",
        "금융 퀴즈 및 미션",
        "인터랙티브 차트 및 데이터 시각화",
        "사용자 성취 및 보상 시스템",
      ],
      images: ["/placeholder.svg?height=300&width=500", "/placeholder.svg?height=300&width=500"],
    },
    backend: {
      description: "안정적이고 확장 가능한 백엔드 시스템을 구축하여 게임 데이터와 금융 정보를 효율적으로 관리했습니다.",
      responsibilities: [
        "RESTful API 설계 및 구현",
        "사용자 진행 상황 및 게임 데이터 관리",
        "외부 금융 API 연동",
        "실시간 알림 시스템 구현",
      ],
      tech: ["Node.js", "Express", "MongoDB", "Firebase", "AWS"],
      features: [
        "사용자 인증 및 프로필 관리",
        "게임 진행 상황 저장 및 동기화",
        "금융 데이터 API 연동",
        "실시간 이벤트 및 알림 시스템",
      ],
      architecture:
        "마이크로서비스 아키텍처를 채택하여 게임 로직, 사용자 관리, 금융 데이터 처리 등의 기능을 독립적인 서비스로 분리했습니다. 이를 통해 시스템의 확장성과 유지보수성을 향상시켰습니다.",
    },
    ai: {
      description:
        "금융 데이터를 분석하고 예측하는 AI 모델을 개발하여 게임 내 주식 시장 시뮬레이션과 투자 힌트를 제공했습니다.",
      responsibilities: [
        "LSTM 기반 주가 패턴 분석 모델 개발",
        "뉴스 기사 감정 분석 모델 구현",
        "사용자 행동 패턴 분석 및 맞춤형 콘텐츠 추천",
        "금융 교육 콘텐츠 난이도 자동 조정 시스템 개발",
      ],
      tech: ["LSTM", "KR-FinBERT-SC", "TensorFlow", "Scikit-learn", "Pandas"],
      models: [
        "LSTM 모델: 주가 패턴 분석 및 예측",
        "KR-FinBERT-SC: 금융 뉴스 감정 분석",
        "사용자 행동 패턴 클러스터링: 맞춤형 콘텐츠 추천",
      ],
      dataProcessing:
        "금융 시장 데이터, 뉴스 기사, 재무제표 등 다양한 소스의 데이터를 수집하고 전처리하여 분석에 활용했습니다. 특히 한국어 금융 뉴스 데이터에 대한 감정 분석을 위해 특화된 전처리 파이프라인을 구축했습니다.",
      evaluation:
        "AI 모델의 성능을 평가하기 위해 실제 주가 데이터와의 비교 분석 및 사용자 피드백을 수집했습니다. 주가 패턴 예측 모델은 70% 이상의 정확도를 보였으며, 감정 분석 모델은 82%의 정확도를 달성했습니다.",
    },
  },
  {
    id: "clothes-memory",
    title: "기웃기옷 - 옷 기억도 분석 서비스",
    description:
      "사용자가 입으려는 옷이 주변 사람들에게 얼마나 기억에 남는지 분석하고, 더 나은 스타일 선택을 지원하는 서비스입니다.",
    image: "/placeholder.svg?height=300&width=500",
    overview:
      "기웃기옷은 사용자의 의상이 타인에게 얼마나 기억에 남는지를 분석하여 더 효과적인 스타일링을 지원하는 서비스입니다. 특히 중요한 미팅이나 면접 등 인상이 중요한 상황에서 최적의 의상 선택을 돕는 것이 목표입니다.",
    challenge:
      "사용자의 의상이 타인에게 미치는 인상과 기억도를 객관적으로 측정하는 것이 주요 도전 과제였습니다. 또한 사용자의 움직임과 대화 상대를 정확히 감지하여 상황별 분석을 제공해야 했습니다.",
    solution:
      "CNN-LSTM 모델을 사용하여 사용자의 움직임을 감지하고, 블루투스 기술을 활용하여 대화 상대를 분석했습니다. Pyannote과 블루투스를 결합해 대화 감지 정확도를 향상시켰습니다.",
    result:
      "음성 입력을 통해 옷 정보를 기록하는 데 걸리는 시간이 단축되었으며, 직관적인 기억도 시각화로 사용자 만족도가 증가했습니다.",
    github: "https://github.com/example/clothes-memory",
    demo: "https://clothes-memory.example.com",
    frontend: {
      description:
        "사용자 친화적인 인터페이스를 통해 의상 정보 입력과 기억도 분석 결과를 직관적으로 보여주는 프론트엔드를 개발했습니다.",
      responsibilities: [
        "Vue.js를 활용한 SPA 개발",
        "의상 정보 입력 및 관리 UI 구현",
        "기억도 분석 결과 시각화",
        "음성 인식 인터페이스 개발",
      ],
      tech: ["Vue.js", "Vuex", "TailwindCSS", "Chart.js", "Web Speech API"],
      features: [
        "음성 인식을 통한 의상 정보 입력",
        "의상 카테고리 및 태그 관리",
        "기억도 분석 결과 시각화",
        "상황별 의상 추천",
      ],
      images: ["/placeholder.svg?height=300&width=500", "/placeholder.svg?height=300&width=500"],
    },
    backend: {
      description:
        "사용자 데이터와 분석 결과를 안전하게 관리하고, 실시간 분석을 지원하는 백엔드 시스템을 구축했습니다.",
      responsibilities: [
        "Django 기반 RESTful API 개발",
        "WebSocket을 활용한 실시간 데이터 처리",
        "사용자 인증 및 데이터 보안 구현",
        "블루투스 데이터 수집 및 처리",
      ],
      tech: ["Django", "PostgreSQL", "WebSocket", "Redis", "Docker"],
      features: [
        "사용자 인증 및 프로필 관리",
        "의상 데이터 저장 및 관리",
        "실시간 분석 결과 제공",
        "블루투스 기기 연동",
      ],
      architecture:
        "이벤트 기반 아키텍처를 채택하여 실시간 데이터 처리와 분석을 효율적으로 수행했습니다. WebSocket을 통한 양방향 통신으로 사용자에게 즉각적인 피드백을 제공했습니다.",
    },
    ai: {
      description: "사용자의 의상이 타인에게 미치는 인상과 기억도를 분석하는 AI 모델을 개발했습니다.",
      responsibilities: [
        "CNN-LSTM 기반 움직임 감지 모델 개발",
        "대화 감지 및 분석 알고리즘 구현",
        "의상 기억도 예측 모델 개발",
        "상황별 의상 추천 시스템 구현",
      ],
      tech: ["CNN-LSTM", "Pyannote", "SVM", "Naive Bayes", "블루투스"],
      models: [
        "CNN-LSTM: 사용자 움직임 패턴 분석",
        "Pyannote: 대화 감지 및 화자 구분",
        "SVM & Naive Bayes: 의상 기억도 예측",
      ],
      dataProcessing:
        "사용자의 움직임 데이터, 대화 패턴, 의상 정보 등을 수집하고 전처리하여 분석에 활용했습니다. 특히 블루투스 신호 강도를 활용한 대화 상대 감지 알고리즘을 개발했습니다.",
      evaluation:
        "AI 모델의 성능을 평가하기 위해 실제 사용자 테스트와 설문 조사를 실시했습니다. 그 결과 대화 감지 정확도 85%, 의상 기억도 예측 정확도 78%를 달성했습니다.",
    },
  },
]
